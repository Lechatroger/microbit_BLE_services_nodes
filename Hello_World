[{"id":"fd738279.9f674","type":"tab","label":"Flow 4","disabled":false,"info":""},{"id":"91d42870.0564e8","type":"function","z":"fd738279.9f674","name":"ParamMicrobit","func":"msg.payload = {};\nmsg.payload.microbitID = \"cc65def3fc0b\"; \nmsg.payload.accelerometer = true;\nmsg.payload.buttons = true;\nmsg.payload.pin0 = false; \nmsg.payload.pin1 = false;\nmsg.payload.pin2 = false;\nmsg.payload.magnetometer = false;\nmsg.payload.magnetometerBearing = false;\nmsg.payload.temperature = true;\nmsg.payload.uart = false;\nmsg.payload.period = 640; //Support values are: 1, 2, 5, 10, 20, 80, 160, or 640 ms.\n\nreturn msg;\n\n","outputs":1,"noerr":0,"x":460,"y":220,"wires":[["6f23493a.876488"]]},{"id":"61506936.1202e8","type":"inject","z":"fd738279.9f674","name":"tipmestamp 2","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"onceDelay":"1","x":110,"y":180,"wires":[["91d42870.0564e8"]]},{"id":"6f23493a.876488","type":"function","z":"fd738279.9f674","name":"Microbit","func":"var BBCMicrobit = global.get('bbcmicrobit');\n\nvar BUTTON_VALUE_MAPPER = ['Not Pressed', 'Pressed', 'Long Press'];\nvar pin0 = 0; var pin1 = 1; var pin2 = 2;\nvar id = msg.payload.microbitID;\n\nconsole.log('Discovering microbit...');\n//BBCMicrobit.discover(function(microbit) \nBBCMicrobit.discoverById(id, function(microbit) {console.log('\\tMicrobit discovered! id = %s, address = %s', microbit.id, microbit.address);\n\n    console.log('Connecting to microbit...');\n    microbit.connectAndSetUp(function() {\n        console.log('\\tMicrobit connected!');\n        node.send([null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, msg]);\n        \n        microbit.on('disconnect', function() {\n            console.log('\\tMicrobit disconnected!');\n            node.send([null, null, null, null, null, null, null, null, null, null, null, null, null, null, msg, null]);\n        });\n\n        if (msg.payload.accelerometer === true){\n            \n            microbit.on('accelerometerChange', function(x, y, z) {console.log('\\tAccelerometer = %d %d %d G', x, y, z);\n                node.send([{payload:x}, {payload:y}, {payload:z}, null, null, null, null, null, null, null, null, null, null, null, null, null]);\n            });\n                \n            console.log('Setting accelerometer period to %d ms...', msg.payload.period);\n            microbit.writeAccelerometerPeriod(msg.payload.period, function() {console.log('\\tAccelerometer period set!');\n                        \n                console.log('Subscribing to accelerometer...');\n                microbit.subscribeAccelerometer(id , function() {console.log('\\tSubscribed to accelerometer!');});\n            }); \n        }\n        \n        if (msg.payload.buttons === true){\n            \n            console.log('Subscribing to buttons...');\n            microbit.subscribeButtons(id, function() {console.log('\\tSubscribed to buttons!');});\n\n            microbit.on('buttonAChange', function(valueA) {console.log('\\tButton A: ', BUTTON_VALUE_MAPPER[valueA]);\n                node.send([null, null, null, {payload: BUTTON_VALUE_MAPPER[valueA]}, null, null, null, null, null, null, null, null, null, null, null, null]);\n            });\n            \n            microbit.on('buttonBChange', function(valueB) {console.log('\\tButton B: ', BUTTON_VALUE_MAPPER[valueB]);\n                node.send([null, null, null, null, {payload: BUTTON_VALUE_MAPPER[valueB]}, null, null, null, null, null, null, null, null, null, null, null]);\n            });\n        }\n        \n        if ((msg.payload.pin0 === true)||(msg.payload.pin1 === true)||(msg.payload.pin2 === true)){\n            \n            console.log('Subscribing to pin data...');\n            microbit.subscribePinData(id, function() {console.log('\\tSubscribed to pin data!');}); \n            \n            if(msg.payload.pin0 === true){\n                console.log('Setting pin0 %d as input...', pin0);\n                microbit.pinInput(pin0, function() {console.log('\\tPin0 set as input!');\n\n                    console.log('Setting pin0 %d as analog...', pin0);\n                    microbit.pinAnalog(pin0, function() {console.log('\\tPin0 set as analog!');});\n                });\n                \n                microbit.on('pinDataChange', function(pin0, value0) {console.log('\\tPin 0: value = %d', pin0, value0);\n                    node.send([null, null, null, null, null, {payload:value0}, null, null, null, null, null, null, null, null, null, null]);\n                });\n            }\n            \n            if(msg.payload.pin1 === true){\n                console.log('Setting pin1 %d as input...', pin1);\n                microbit.pinInput(pin1, function() {console.log('\\tPin1 set as input!');\n\n                    console.log('Setting pin1 %d as analog...', pin1);\n                    microbit.pinAnalog(pin1, function() {console.log('\\tPin1 set as analog!');});\n                });\n                \n                microbit.on('pinDataChange', function(pin1, value1) {console.log('\\tPin 1: value = %d', pin1, value1);\n                    node.send([null, null, null, null, null, null, {payload:value1}, null, null, null, null, null, null, null, null, null]);\n                });\n            }\n            \n            if(msg.payload.pin2 === true){\n                console.log('Setting pin2 %d as input...', pin2);\n                microbit.pinInput(pin2, function() {console.log('\\tPin2 set as input!');\n\n                    console.log('Setting pin2 %d as analog...', pin2);\n                    microbit.pinAnalog(pin2, function() {console.log('\\tPin2 set as analog!');});\n                \n                    microbit.on('pinDataChange', function(pin2, value2) {console.log('\\tPin 2: value = %d', pin2, value2);\n                        node.send([null, null, null, null, null, null, null, {payload:value2}, null, null, null, null, null, null, null, null]);\n                    });\n                });\n            }\n        }\n\n        if (msg.payload.magnetometer === true){\n            console.log('Subscribing to magnetometer...');\n            microbit.subscribeMagnetometer(id, function() {console.log('\\tSubscribed to magnetometer!');\n\n                console.log('Setting magnetometer period to %d ms...', msg.payload.period);\n                microbit.writeMagnetometerPeriod(msg.payload.period, function() {console.log('\\tMagnetometer period set!');});\n            });\n            \n            microbit.on('magnetometerChange', function(x, y, z) {console.log('\\tMagnetometer: %d %d %d', x, y, z);\n                node.send([null, null, null, null, null, null, null, null, {payload:x}, {payload:y}, {payload:z}, null, null, null, null, null]);\n            });\n        }\n\n        if (msg.payload.magnetometerBearing === true){\n            \n            console.log('Subscribing to magnetometer bearing...');\n            microbit.subscribeMagnetometerBearing(id, function() {console.log('\\tSubscribed to magnetometer bearing!');\n\n                console.log('Setting magnetometer period to %d ms...', msg.payload.period);\n                microbit.writeMagnetometerPeriod(msg.payload.period, function() {console.log('\\tMagnetometer period set!');});\n            }); \n            \n            microbit.on('magnetometerBearingChange', function(bearing) {console.log('\\tMagnetometer bearing = %d', bearing);\n                 node.send([null, null, null, null, null, null, null, null, null, null, null, {payload:bearing}, null, null, null, null]);\n            });\n        }\n\n        if (msg.payload.temperature === true){\n            microbit.on('temperatureChange', function(temperature) {console.log('\\tTemperature = %d Â°C', temperature);\n                node.send([null, null, null, null, null, null, null, null, null, null, null, null, {payload:temperature}, null, null, null]);\n            });\n            \n            console.log('Setting temperature period to %d ms...', msg.payload.period);\n            microbit.writeTemperaturePeriod(msg.payload.period, function() {console.log('\\tTemperature period set!');\n            \n                console.log('Subscribing to temperature...');\n                microbit.subscribeTemperature(id, function() {console.log('\\tSubscribed to temperature!');});\n            });\n        }\n\n        if (msg.payload.uart === true){\n            microbit.on('uartData', function(data) {console.log('\\tUart data: %s', data);\n                node.send([null, null, null, null, null, null, null, null, null, null, null, null, null, {payload:data}, null, null]);\n            });\n            \n            console.log('Subscribing to Uart...');\n            microbit.subscribeUart(id, function() {console.log('Subscribed to Uart!');});\n        }\n\n    });\n});","outputs":16,"noerr":0,"x":440,"y":360,"wires":[["828cbb4e.8b1028"],[],[],["2dc78cd1.35b2b4"],[],[],[],[],[],[],[],[],["d3e7dab1.9ece28"],[],["91d42870.0564e8"],[]],"inputLabels":["ParamMicrobit"],"outputLabels":["Accelerometer X","Accelerometer Y","Accelerometer Z","Button A","Button B","Pin 0","Pin 1","Pin 2","Magnetometer X","Magnetometer Y","Magnetometer Z","Magnetometer Bearing","Temperature","Uart","on disconnect","on connected"]},{"id":"828cbb4e.8b1028","type":"debug","z":"fd738279.9f674","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","x":630,"y":280,"wires":[]},{"id":"bcc7f141.fabb3","type":"comment","z":"fd738279.9f674","name":"Step 4: In 'ParamMicrobit' node, choose de BLE services you want to use (true or false).","info":"","x":670,"y":180,"wires":[]},{"id":"32d6b5ff.fbcb7a","type":"comment","z":"fd738279.9f674","name":"Step 5: Connect a 'debug' node (or else) on the wanted output of 'Microbit' node","info":"","x":840,"y":320,"wires":[]},{"id":"5847692b.c4a478","type":"comment","z":"fd738279.9f674","name":"Step 6: Click on the 'timestamp 2' node","info":"","x":170,"y":140,"wires":[]},{"id":"7d41ee2b.37e5a","type":"function","z":"fd738279.9f674","name":"Find IDs","func":"var BBCMicrobit = global.get('bbcmicrobit');\n\nconsole.log('Discovering microbit...');\nBBCMicrobit.discoverAll(onDiscover);\n\nfunction onDiscover(microbit) {\n    console.log('\\tMicrobit discovered! id = %s, address = %s', microbit.id, microbit.address);\n    node.send({payload:microbit});\n}\n","outputs":1,"noerr":0,"x":280,"y":80,"wires":[["cb89a043.02d9b"]]},{"id":"285108cf.002e08","type":"inject","z":"fd738279.9f674","name":"timestamp 1","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":110,"y":80,"wires":[["7d41ee2b.37e5a"]]},{"id":"cb89a043.02d9b","type":"debug","z":"fd738279.9f674","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","x":450,"y":80,"wires":[]},{"id":"dca6983b.c1fcb8","type":"comment","z":"fd738279.9f674","name":"Step 1: Click on 'timestamp 1' node","info":"","x":160,"y":40,"wires":[]},{"id":"e95ea96c.7c2f98","type":"comment","z":"fd738279.9f674","name":"Step 2: Copy the ID of your microbit that's available in Node-RED debug window or terminal","info":"","x":700,"y":40,"wires":[]},{"id":"652e475d.a6af78","type":"comment","z":"fd738279.9f674","name":"Step 3: In the 'ParamMicrobit' node, paste the ID of the microbit you've previously copied in the 'microbitID' attribute","info":"","x":750,"y":140,"wires":[]},{"id":"2dc78cd1.35b2b4","type":"debug","z":"fd738279.9f674","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","x":630,"y":360,"wires":[]},{"id":"d3e7dab1.9ece28","type":"debug","z":"fd738279.9f674","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","x":630,"y":400,"wires":[]},{"id":"e94dc464.785498","type":"comment","z":"fd738279.9f674","name":"Step 6: Deploy, then reset (with reset button) the microbit","info":"","x":770,"y":460,"wires":[]},{"id":"8f74d553.5a6f98","type":"comment","z":"fd738279.9f674","name":"READ ME","info":"This Hello world project is set up such as:\n    \n    -The results of accelerometer, temperature and both buttons are ploted in Node-RED's terminal.\n    -The results of accelerometer X, temperature and button A is ploted in Node-RED's debug window.\n    \nDon't forget to write the ID of your microbit in the ParamMicrobit node.\n\nHave fun!\n     ","x":180,"y":320,"wires":[]}]
